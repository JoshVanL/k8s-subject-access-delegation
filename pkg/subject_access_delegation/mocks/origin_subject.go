// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/joshvanl/k8s-subject-access-delegation/pkg/subject_access_delegation/interfaces (interfaces: OriginSubject)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/rbac/v1"
	reflect "reflect"
)

// MockOriginSubject is a mock of OriginSubject interface
type MockOriginSubject struct {
	ctrl     *gomock.Controller
	recorder *MockOriginSubjectMockRecorder
}

// MockOriginSubjectMockRecorder is the mock recorder for MockOriginSubject
type MockOriginSubjectMockRecorder struct {
	mock *MockOriginSubject
}

// NewMockOriginSubject creates a new mock instance
func NewMockOriginSubject(ctrl *gomock.Controller) *MockOriginSubject {
	mock := &MockOriginSubject{ctrl: ctrl}
	mock.recorder = &MockOriginSubjectMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOriginSubject) EXPECT() *MockOriginSubjectMockRecorder {
	return m.recorder
}

// ResolveOrigin mocks base method
func (m *MockOriginSubject) ResolveOrigin() error {
	ret := m.ctrl.Call(m, "ResolveOrigin")
	ret0, _ := ret[0].(error)
	return ret0
}

// ResolveOrigin indicates an expected call of ResolveOrigin
func (mr *MockOriginSubjectMockRecorder) ResolveOrigin() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResolveOrigin", reflect.TypeOf((*MockOriginSubject)(nil).ResolveOrigin))
}

// RoleRefs mocks base method
func (m *MockOriginSubject) RoleRefs() ([]*v1.RoleRef, error) {
	ret := m.ctrl.Call(m, "RoleRefs")
	ret0, _ := ret[0].([]*v1.RoleRef)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RoleRefs indicates an expected call of RoleRefs
func (mr *MockOriginSubjectMockRecorder) RoleRefs() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RoleRefs", reflect.TypeOf((*MockOriginSubject)(nil).RoleRefs))
}
